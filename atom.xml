<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jerry&#39;s Diary</title>
  <subtitle>Ambitious, down to earth.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://mmrxia.github.io/"/>
  <updated>2016-05-22T03:34:11.434Z</updated>
  <id>http://mmrxia.github.io/</id>
  
  <author>
    <name>xiaqingsong</name>
    <email>this.xqs@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>js 数组复制操作</title>
    <link href="http://mmrxia.github.io/2016/05/22/js-%E6%95%B0%E7%BB%84%E5%A4%8D%E5%88%B6%E6%93%8D%E4%BD%9C/"/>
    <id>http://mmrxia.github.io/2016/05/22/js-数组复制操作/</id>
    <published>2016-05-22T03:31:55.000Z</published>
    <updated>2016-05-22T03:34:11.434Z</updated>
    
    <content type="html">&lt;p&gt;js中数组和对象，使用“=”号赋值的时候，由于是引用类型，只是改变了引用对象的指针指向，改变值时会引起连锁反应。&lt;br&gt;简单效果如下：&lt;br&gt;&lt;img src=&quot;http://note.youdao.com/yws/public/resource/f19fdadbf6e08dd9e8815d00bcfc0a79/FE74C0130EAF4F01832176D552AC5300&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;避免指针指向的方法主要有一下几种：&lt;br&gt;（1）使用slice()方法。slice() 函数可从已有的数组中返回选定的元素；语法为：arr.slice(start,end);&lt;br&gt;slice()函数将会返回一个新的数组对象，所以使用slice(0)或slice()就可以实现数组的复制。如下：&lt;br&gt;&lt;img src=&quot;http://note.youdao.com/yws/public/resource/f19fdadbf6e08dd9e8815d00bcfc0a79/88580C670A80470E82F454FD03BE561E&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;p&gt;（2）使用concat()方法。语法为：arr.concat(arr1,arr2,arr3,…,arrn);&lt;br&gt;concat()用于多个数组的合并，但是返回的结果是一个新的数组，而不再引用用于合并的任何一个数组。如下：&lt;br&gt;&lt;img src=&quot;http://note.youdao.com/yws/public/resource/f19fdadbf6e08dd9e8815d00bcfc0a79/9DEAB14934984A95BE34101BBD3D310D&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;（3）笨方法：使用for循环；原理就不说了，直接上代码：&lt;br&gt; &lt;img src=&quot;http://note.youdao.com/yws/public/resource/f19fdadbf6e08dd9e8815d00bcfc0a79/F639B6D879244986B6E101963F9AC5EB&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;（4）使用jQuery的extend或merge方法：&lt;br&gt;$.extend 功能很强大，可以合并数组，对象！具体可参见jQuery api。&lt;br&gt; &lt;img src=&quot;http://note.youdao.com/yws/public/resource/f19fdadbf6e08dd9e8815d00bcfc0a79/087F389726594492B32B0E0A41D7DC3D&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;$.merge 只能合并一维数组，且一次只能合并2个，个人觉得没有concat方法强大。&lt;br&gt;&lt;img src=&quot;http://note.youdao.com/yws/public/resource/f19fdadbf6e08dd9e8815d00bcfc0a79/E26F1DB0A99B438D9B10E88E89A95935&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;其他参考：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;javascript 原始类型和引用类型&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;js中数组和对象，使用“=”号赋值的时候，由于是引用类型，只是改变了引用对象的指针指向，改变值时会引起连锁反应。&lt;br&gt;简单效果如下：&lt;br&gt;&lt;img src=&quot;http://note.youdao.com/yws/public/resource/f19fdadbf6e08
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>真假美猴王死的到底是谁</title>
    <link href="http://mmrxia.github.io/2016/05/17/%E7%9C%9F%E5%81%87%E7%BE%8E%E7%8C%B4%E7%8E%8B%E6%AD%BB%E7%9A%84%E5%88%B0%E5%BA%95%E6%98%AF%E8%B0%81/"/>
    <id>http://mmrxia.github.io/2016/05/17/真假美猴王死的到底是谁/</id>
    <published>2016-05-17T07:18:14.000Z</published>
    <updated>2016-05-22T03:28:21.650Z</updated>
    
    <content type="html">&lt;p&gt;看《西游记》第五十七回，说是“六耳猕猴”化作孙悟空的摸样，伤了唐僧，后又和孙悟空大打出手。。。这位假孙悟空，实力不用多说了吧，和真孙悟空一般无二，大战孙悟空，闹到上天入地下海。在唐僧那：念紧箍咒，两个都喊疼，自然看不出哪个真假；到天宫：拖塔天王拿照妖镜照，也看不出；又到观音那：观音也看不出。最后到幽冥处阎罗那，经“谛听”听过之后，“谛听”却说：“我看出来了，却不敢说”。。。最后还是如来老佛爷道出六耳真身并用金钵盂罩住，才被孙悟空一棍子打死。&lt;/p&gt;
&lt;p&gt;这是整个故事，看似很简单，很完整，不过，却有一个天大的伏笔。&lt;br&gt;咱现在先假设一下，被打死的那个是悟空，活的那个是六耳猕猴。我这不是胡说的，是有道理的，一下是我的一些理论：&lt;/p&gt;
&lt;p&gt;一、六耳猕猴和孙悟空一模一样，谁也看不出来，就算如来骗大家说六耳猕猴就是真的悟空，而这个谎言，也只有如来知道真相，真正的孙悟空，他只是个哑巴吃黄连。&lt;/p&gt;
&lt;p&gt;二、六耳猕猴很有可能是如来安排的一个托儿，大家都知道，孙悟空是个叛逆者，而如来是西天的最高统治者，哪个统治者会允许一个叛逆者生活在这个世界上？再加上，大家都知道的，孙悟空一向不敬重如来。所以如来会想方设法消灭孙悟空。当然不能明白着把孙悟空直接杀了，所以才出现一个一模一样的悟空，杀孙悟空于无形。而这个也是有证据的。&lt;/p&gt;
&lt;p&gt;1：比如在地府里面，经“谛听”听过之后，“谛听”明知道真假，却不敢说，其想法肯定不是怕两个悟空大闹地府，而是这个六耳猕猴有很强大的后台，那就是如来。所以，“谛听”自然不敢说出真相。&lt;br&gt;2：其次，可以证明“谛听”不是真正的怕二猴大闹地府的原因还有一个，大家都知道，当时在场的还有一个法力很强的人，当然，不是阎罗，阎罗和这人比，是天壤之别，这人就是“地藏王菩萨”，“地藏王菩萨”何许人啊，是佛教四大菩萨之首，与观音、文殊、普贤齐名，可见此人厉害。既然有这么厉害的佛门中人在此，难道“谛听”还担心这两泼猴会闹了地府不成？&lt;/p&gt;
&lt;p&gt;三、大家都知道，孙悟空的师傅是“菩提祖师”，“菩提祖师”何许人？《封神榜》上有个线索，就是“混鲲祖师”的徒弟，而恰巧，“混鲲祖师”弟子无数，而让他最得意的两大弟子，便是如来(又名“接引道人“）和菩提祖师(又名“准提道人“）。。。&lt;br&gt;一个大胆的想法，既然两位圣人是同门师兄，且《封神榜》中曾经略提到过，说二弟子准提道人（也就是说菩提祖师），其间不知与接引道人（如来）间发生了什么变故，却神秘消失，从此再不闻踪迹。这是一个很有力度的线索，证明二人之间有矛盾。&lt;br&gt;然后再回到孙悟空，而孙悟空又恰巧是菩提祖师的徒弟，如来见到昔日仇人的徒弟，又有翻天覆地之本领，不想方设法除之更待何时？&lt;/p&gt;
&lt;p&gt;四、西游记上讲述了孙悟空在菩提祖师处学了一身法术之后神通广大。而恰巧，和冒充孙悟空的六耳猕猴却也拥有和孙悟空一模一样的法术，甚至连长相声音装的都完全一样？这是巧合吗？大家都知道孙悟空只学个72变和筋斗云都学了几年，六耳猕猴不可能不学就天生就有这本领吧？肯定有和孙悟空同门出处的高人指点，自然菩提祖师不会在此之列，因为老人家既然有了孙悟空这样有情有义的徒弟，难道还要在造出一个六耳猕猴来和孙悟空对着干吗？所以，指点六耳猕猴来和孙悟空对着干的只有一个人，那就是菩提祖师的同门师兄，如来。&lt;/p&gt;
&lt;p&gt;五、再回到《西游记》第五十八回，话说，二猴打闹到如来这里要如来辩个真假。。。如来却对众佛说：“我观假悟空乃六耳猕猴也。此猴若立一处，能知千里外之事，凡人说话，亦能知之，故此善聆音，能察理，知前后，万物皆明。与真悟空同象同音者，六耳猕猴也”。&lt;br&gt;经如来这么一说，众佛知道了，原来天下众生中还有这么一个叫“六耳猕猴”，而西游记的读者们却忽略了如来的这一句话里的一个线索：如来说的意思是，此猴和孙悟空不同，孙悟空是“灵明石猴”，同变化，识天时，知地利，移星换斗。而六耳猕猴是“知前后，万物皆明”。很厉害吧，竟然知道过去和未来发生的一切事。这是一个很大的破绽！！！既然六耳猕猴知道他的未来将要被如来制服，被孙悟空一棒打死，他为什么还要和孙悟空到如来处辩真假，那不是自讨苦吃吗？所以只有一个可能，如来早都把事情安排的妥当，在他的说明下，让众佛都以为六耳猕猴就是“真悟空”，而真正的悟空，却被当成了“六耳猕猴”被如来制服，然后被一棒打死。&lt;br&gt;而当“六耳猕猴”被打死之后，一向慈悲为怀的如来却没一点怪罪之意，只是合并双手，道了句：“善哉，善哉！”。。。大家都知道，以如来的本领，当“孙悟空”想要一棒子打死“六耳猕猴”的话，如来想要出手相救，是何等的容易，可见，如来本意就是想让他死。而“六耳猕猴”本无太大的罪过，也就是和孙悟空大闹了下，一向慈悲的如来何必要让他死呢，想当年孙悟空闹了龙宫，闹了地府，闹了天宫，如来都还没让他死呢，怎么“六耳猕猴”这么一个小小的错误就要必须死呢？这里面肯定有隐情。所以那个隐情就是，如来是真正想处死的是孙悟空，而被一棒子打死的，却恰好是真正的孙悟空。&lt;/p&gt;
&lt;p&gt;六、大家会以为，孙悟空不是已经被生死薄删除了名字，又吃了那么多蟠桃和仙丹，早都可以长生不老，也有了金刚不坏之躯，怎么能这么容易就给打死了呢。这个也许就只有如来自己知道了，大家可以想象，如来既然当年有能力把孙悟空压打五行山，现在虽然杀不了孙悟空，当然也肯定有办法让孙悟空永远消失的活着。&lt;/p&gt;
&lt;p&gt;七、又回到孙悟空的师傅“菩提祖师”这。西游记里曾经记载，孙悟空在大闹天宫之后，惹了一大堆麻烦只好跟着唐僧西天取经，遇到困难又回去找他师傅“菩提祖师”的时候，“菩提祖师”早已不见踪影，只是和孙悟空隔空说话，并不见面。这是为什么呢？想必孙悟空用“菩提祖师”所教的本领大闹天宫之后，如来必有察觉，肯定会发现此七十二变和筋斗云正是同门法术。刚才我也说过了，菩提祖师和如来曾经因为一些矛盾，后来菩提祖师隐居了。如果如来看到孙悟空的本领后，肯定便知此本领肯定是菩提祖师所受，自然要追寻这个消失已久的仇人。所以，菩提祖师得知孙悟空大闹天宫之后，为防止不必要的麻烦，也已经消失的无影无踪。。。&lt;br&gt;而话又说回来了，菩提祖师本领并不亚于如来，这个可以从《西游记》第八回看出。。。其中有一段，如来说：“我西牛贺洲者，不贪不杀，养气潜灵，虽无上真，人人固寿”。大家注意了，如来说，“西牛贺州，虽无上真”，这恰恰说明，菩提在西牛贺洲传道能逃过如来法眼，说明菩提不比如来差。 &lt;/p&gt;
&lt;p&gt;八、大家发现没，在真假美猴王事出之前，孙悟空并不完全都听唐僧的话，甚至有时候，还闹个小矛盾，导致唐僧只好念紧箍咒，典型的一个叛逆者形象。可自从真假美猴王事出之后，孙悟空从此保护唐僧安安分分。而以此事可以看出，孙悟空前后可判若两人。不排除，孙悟空已被如来利用六耳猕猴一战中，安安静静、无人知晓的已被安排下台了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;其实还有另外一个版本，且待我慢慢道来：&lt;/p&gt;
&lt;p&gt;六耳猕猴是西游记中最奇特的一个妖怪，怎么奇特呢？我们来看一看：&lt;/p&gt;
&lt;h3 id=&quot;一、人物奇特&quot;&gt;&lt;a href=&quot;#一、人物奇特&quot; class=&quot;headerlink&quot; title=&quot;一、人物奇特&quot;&gt;&lt;/a&gt;一、人物奇特&lt;/h3&gt;&lt;p&gt;西游记主要是看孙悟空的戏，六耳猕猴这个妖怪居然敢冒充主角孙悟空，上演了一出《真假美猴王》的好戏。&lt;br&gt;按妖怪的胆量、能力与勇气大致可以分为三种：&lt;br&gt;1.怕孙悟空的妖怪根本不敢冒充孙悟空。&lt;br&gt;2.不把孙悟空放在眼里的妖怪根本不屑于冒充孙悟空。&lt;br&gt;3.和孙悟空势均力敌的妖怪，手段也颇高了，完全没有必要冒充孙悟空。&lt;br&gt;六耳猕猴这个妖怪的本事和孙悟空是一样的，他完全有能力独霸一方，干吗还要冒充孙悟空呢？因此，六耳猕猴冒充孙悟空，就显得格外的奇特。&lt;/p&gt;
&lt;h3 id=&quot;二、地点奇特&quot;&gt;&lt;a href=&quot;#二、地点奇特&quot; class=&quot;headerlink&quot; title=&quot;二、地点奇特&quot;&gt;&lt;/a&gt;二、地点奇特&lt;/h3&gt;&lt;p&gt;唐僧遇到六耳猕猴的地方，是强盗出没的山林，这里至少有三十几个以上的强盗在此地谋生活，这就说明这个山头是属于强盗的，按说不会有妖怪，若有妖怪，则强盗们根本无法生存，更不可能结成团伙，形成气候，早被妖怪吃了。&lt;br&gt;可见，六耳猕猴这个妖怪并不是本地妖怪，那他是从哪儿来的？&lt;br&gt;西游记中的妖怪无论法力大小，都有一块属于自己的地盘，厉害的妖怪管的宽一些，不厉害的妖怪地盘小点，怎么说，得有一片生存的土壤，否则，他是成不了妖的。&lt;br&gt;六耳猕猴呢？他有没有自己的地盘呢？有，在花果山，乘孙悟空不在的时候，他跑到花果山占山为王了，并且没有被其他的猴子们发觉。&lt;br&gt;可见，六耳猕猴对孙悟空的行踪及过去的经历了如指掌。&lt;/p&gt;
&lt;h3 id=&quot;三、行为奇特&quot;&gt;&lt;a href=&quot;#三、行为奇特&quot; class=&quot;headerlink&quot; title=&quot;三、行为奇特&quot;&gt;&lt;/a&gt;三、行为奇特&lt;/h3&gt;&lt;p&gt;妖怪们都有很强烈的领地感，只在自己控制的势力范围内吃人，基本上吃的都是你自己瞎了眼睛送上门来的，或是采用手段把你诱骗去的，一般不会越界行凶。许多妖怪都说过“若过了此地就不归我管”这类的话。&lt;br&gt;妖怪与妖怪之间是和谐的，没有争斗，偶尔还有聚会，我抓到一个人请你吃，你抓到一个人请我吃，大家都遵守江湖道义。不到别处去撒野，不到别人的门面上去抢生意。&lt;br&gt;而六耳猕猴，则不管这一套，他是从花果山不远万里赶来作案的！这个行为实在是太奇特了，这是其他妖怪所没有的。&lt;/p&gt;
&lt;h3 id=&quot;四、手段奇特&quot;&gt;&lt;a href=&quot;#四、手段奇特&quot; class=&quot;headerlink&quot; title=&quot;四、手段奇特&quot;&gt;&lt;/a&gt;四、手段奇特&lt;/h3&gt;&lt;p&gt;六耳猕猴作案的手段更是怪异，他不像别的妖怪那样躲在半空中，瞅准机会一阵风把唐僧掳走。&lt;br&gt;而是跪在路旁，双手捧着一杯水给唐僧喝，唐僧不喝，骂了他一顿，六耳猕猴就轮铁棒望长老脊背上砑了一下，那长老昏晕在地，不能言语，被他把两个青毡包袱，提在手中，驾筋斗云，不知去向。&lt;br&gt;六耳猕猴并没有抓唐僧，而是把唐僧打了一顿，然后抢了包裹行李，扬长而去的。没有一个妖怪是像他这样搞的。&lt;/p&gt;
&lt;h3 id=&quot;五、动机奇特&quot;&gt;&lt;a href=&quot;#五、动机奇特&quot; class=&quot;headerlink&quot; title=&quot;五、动机奇特&quot;&gt;&lt;/a&gt;五、动机奇特&lt;/h3&gt;&lt;p&gt;六耳猕猴作案的动机，也和其他妖怪不同，妖怪抓唐僧，无非是要吃唐僧肉，或是要交配，而六耳猕猴则是要自己拉一班人马去西天取经！&lt;br&gt;六耳猕猴高坐在石台之上，双手扯着通关文牒，念了从头又念，反复学习。他说：“我今熟读了牒文，我自己上西方拜佛求经，送上东土，我独成功，教那南赡部洲人立我为祖，万代传名也。”&lt;br&gt;六耳猕猴不仅冒充了孙悟空，还找了几个猴精冒充了唐三藏、猪八戒、沙僧和一匹白马，企图上西天，成佛做祖！这个妖怪简直太有创意了！&lt;/p&gt;
&lt;h3 id=&quot;六、过程奇特&quot;&gt;&lt;a href=&quot;#六、过程奇特&quot; class=&quot;headerlink&quot; title=&quot;六、过程奇特&quot;&gt;&lt;/a&gt;六、过程奇特&lt;/h3&gt;&lt;p&gt;六耳猕猴和孙悟空不仅外型一模一样，本事也是一模一样，走到哪儿，都无法分辨谁是真的谁是假的！&lt;br&gt;1.观音菩萨暗念《紧箍儿咒》，两个一齐喊疼，菩萨无计奈何。&lt;br&gt;2.李天王取照妖镜照住，镜中乃是两个孙悟空，毫发不差。玉帝亦辨不出。&lt;br&gt;3.唐僧念《紧箍儿咒》，二人一齐叫苦，唐僧也不认得真假。&lt;br&gt;4.阎罗殿的谛听可以分辨的出真假，却不敢说出来。&lt;br&gt;5.最后被如来佛辨出真假，是所有神仙都没有听说过的新物种：六耳猕猴。&lt;br&gt;6.六耳猕猴被孙悟空当场处决，打死了。&lt;/p&gt;
&lt;p&gt;以上种种疑点，实在太多，这里面就存在无法解释的问题：&lt;br&gt;1.既然阎罗殿的谛听可以分辨的出真假，却为什么不敢说出来？六耳猕猴与孙悟空的本事是一样大的，只要谛听说出哪个是假的，随便加几个人就可以帮孙悟空抓住六耳猕猴，谛听为什么不说？他怕什么？&lt;br&gt;2.既然六耳猕猴熟悉孙悟空的一切，当然就应该十分清楚如来佛祖是非常厉害的，他为什么不跑呢？还要到雷音寺去送死？这不是脑子进了水么？！&lt;br&gt;3.六耳猕猴只不过打了唐僧，既没有打死，也没有要吃唐僧肉，最多论个行凶抢劫罪，怎么说，罪不致死，为什么就把他打死了？！量刑是否过重？&lt;br&gt;4.六耳猕猴的目的是要取经，又是主动的，目标一致，如来佛应该高兴才对，这样的人才哪里找啊？把他也安排进取经的队伍，岂不是更好？&lt;br&gt;5.为什么只有如来佛一个人知道世上还存在“六耳猕猴”这一类物种？而所有的神仙包括菩萨都是闻所未闻的？难道就没一个人知道吗？&lt;br&gt;6.如果所有人都不知道有“六耳猕猴”这一类物种，那么，如来佛祖与六耳猕猴之间，究竟存在着怎样的渊源呢？&lt;/p&gt;
&lt;p&gt;六耳猕猴的下场太惨了，这个和孙悟空一样的上进青年，就这么突然之间死于非命了，可怜，可惜。&lt;br&gt;但是，这件事情的真相，真的就是这样简单么？其中究竟隐藏着怎样的内幕？&lt;br&gt;真假美猴王这一回，不知道欺骗了多少观众，死的到底是谁，先来分析分析。&lt;br&gt;其实呢，这一回中根本就没有妖怪，那个所谓的六耳猕猴并不存在。从头到尾都是孙悟空一个人捣的鬼！大家看西游记把大脑都看的僵化了，总以为孙悟空是捉妖怪的，却怎么都想不到：孙悟空也会冒充妖怪，把唐僧这个泼秃领导暴打一顿以泻私愤吧！&lt;/p&gt;
&lt;p&gt;孙悟空在这件事的起先，他是个受害者，而结果，却变成了最大的受益者，因此，孙悟空是第一嫌疑人。我们再来重新看这一幕：&lt;/p&gt;
&lt;h3 id=&quot;一、起因&quot;&gt;&lt;a href=&quot;#一、起因&quot; class=&quot;headerlink&quot; title=&quot;一、起因&quot;&gt;&lt;/a&gt;一、起因&lt;/h3&gt;&lt;p&gt;孙悟空打死了两个强盗，唐僧念经超度强盗的亡灵：拜惟好汉，我以好话，尔等不听，却遭行者，棍下伤身。你到森罗殿下兴词，他姓孙，我姓陈，各居异姓。冤有头，债有主，切莫告我取经僧人。&lt;br&gt;八戒笑道：“师父推了干净，他打时却也没有我们两个。”三藏又祷告道：“好汉告状，只告行者，也不干八戒、沙僧之事。”&lt;br&gt;孙悟空道：“师父，你老人家忒没情义。虽是我动手打，却也只是为你。你不往西天取经，我不与你做徒弟，怎么会来这里打杀人！”然后骂道：“触恼了我的性子，将你打死了，尽你到那里去告，我老孙是不怕，玉帝认得我，天王随得我；二十八宿惧我，九曜星官怕我；十代阎君曾与我为仆从，五路猖神曾与我当后生；三界五司，十方诸宰，都与我情深面熟，随你那里去告！”&lt;br&gt;这绝对是在恐吓唐僧，把老子惹火了，连你也打死，你去告吧！&lt;br&gt;三藏见他说出这般恶话，心惊肉跳道：“徒弟呀，你怎么就认真起来？”&lt;br&gt;晚上，在老杨家借宿，老杨的儿子是强盗一伙，孙悟空又打死了二三十个强盗，还把老杨儿子的头割下来，拧给唐僧看。&lt;br&gt;唐僧大惊，念起《紧箍儿咒》，把个行者勒得耳红面赤，眼胀头昏，在地下打滚，翻筋斗，竖蜻蜓，疼痛难禁。把大圣咒倒在地，箍儿陷在肉里有一寸来深浅。并威胁道：“快走！迟了些儿，我又念真言，这番决不住口，把你脑浆都勒出来哩！”&lt;br&gt;这是唐僧第三次赶孙悟空滚蛋。西天路走了一大半了，眼看就要出成果了，他要他滚蛋！&lt;br&gt;大圣疼痛难忍，忽然省悟道：“这和尚负了我心。”&lt;br&gt;于是，孙悟空发怒了，终于撕破脸皮反了目：你这泼秃！没了俺老孙，连口水都没得喝，还这般刁难俺，不给点颜色看看，你就不知道俺老孙的狠气！我管你是哪个！一棒子将唐僧打晕在地，扬长而去。丢下了这样一句话：“你这个狠心的泼秃，十分贱我！”&lt;/p&gt;
&lt;h3 id=&quot;二、经过&quot;&gt;&lt;a href=&quot;#二、经过&quot; class=&quot;headerlink&quot; title=&quot;二、经过&quot;&gt;&lt;/a&gt;二、经过&lt;/h3&gt;&lt;p&gt;沙僧来找他算帐，他说没有，绝对没有的事，俺老孙怎会干这样的缺德事呢，你若不信，菩萨可以作证嘛，我这几天一直都在这儿。&lt;br&gt;沙僧当然不信，因为你会架筋斗云，又会分身法。于是，菩萨叫沙僧与悟空同去见个真假。结果，沙僧看到了两个一模一样的孙悟空，长相、声音、本领都是一样的。这些条件是妖怪有可能具备的，可是，最重要的证据金箍棒、紧箍咒也是一样的，而这两个条件是妖怪不可能具备的。这就说明根本没有假的，这明摆着是孙悟空使的分身法嘛！&lt;br&gt;孙悟空上天庭借照妖镜，鉴定结果：两个都是真的。玉帝当然辨不出哪个假。“这大圣呵呵冷笑，那行者也哈哈欢喜”，就说明他正在暗自得意：嘿嘿！你们谁都想不到吧！&lt;br&gt;到阎罗殿去查，谛听是知道真相的，却不敢当面说破，否则，孙悟空不打死他才怪，发起恶来，把阎罗殿都拆了！&lt;br&gt;孙悟空走到哪儿都问的理直气壮：“你们看我两个谁是假的！”都辨不出，因为根本没有假的。他的目的就是要闹得让天、地、神、人、鬼尽知，不是俺老孙打的你这泼秃，而是你这泼秃缺了俺老孙就会碰到妖怪。&lt;/p&gt;
&lt;h3 id=&quot;三、结果&quot;&gt;&lt;a href=&quot;#三、结果&quot; class=&quot;headerlink&quot; title=&quot;三、结果&quot;&gt;&lt;/a&gt;三、结果&lt;/h3&gt;&lt;p&gt;最后闹到雷音寺，孙悟空与如来佛说的话，和在前面别处说的是有区别的，他先说这一路上我这般辛苦，不知费了多少精神，师父却把我赶出来。现在，请佛祖与&lt;em&gt;**&lt;/em&gt;辨明邪正，我才好保唐僧过来把佛经取回东土，帮你永传大教。&lt;br&gt;注意：他说的是辨明邪正，不是辨明真假，而在前面别处他都是说的辨个真假。这个区别是相当大的，真假，是指两个人谁真谁假，邪正，是问我的行为对不对，请如来公断。&lt;br&gt;孙悟空这点分身术的小把戏，又岂能瞒得过如来佛？！在他还没来之前，如来佛就已经对大众说了：“汝等俱是一心，且看他二心斗来。”你们这些人呀，一心要看他谁真谁假，又岂能识破他的二心呢？根本就不是两个人，是二心也，孙猴子生了二心，把老师都打了！你们却以为是妖怪。&lt;br&gt;但是，这能说吗？一说破，就无法收场了，这个经就彻底的取不成了！如来的计划就破产了！所以，大局为重，如来佛也不能说破，不但不能说，反而还要很默契地配合他假戏真做！所以如来才杜撰出一个谁也没听说、没见过、根本就不存在的六耳猕猴来。&lt;br&gt;原著中这样写道：如来正欲道破，忽见…，如来笑道：我观假悟空乃六耳猕猴也。&lt;br&gt;孙悟空没想到如来佛会瞎扯，很是震惊，不知道如来要干什么，如来也没有辨真假，而是直接吓唬猴子：“悟空休动，待我与你擒住他。”悟空生怕被抓住把柄，急变蜂儿飞跑。大众不知，以为走了。如来笑云：“汝等休要再言，妖精未走，在我钵盂之下。”将钵盂揭起，果见一六耳猕猴。&lt;br&gt;孙大圣忍不住，将其打死。“忍不住”这三字用的好啊，悟空的心理素质到底比不上如来佛祖。佛法无边的如来总算帮神通广大的悟空把这个弥天大谎撒团圆了，皆大欢喜。&lt;br&gt;大圣叩头谢道：“上告如来：那师父若不要我，却不又枉劳一番神思！还是放我还俗去罢。”如来道：“你休乱想，切莫放刁，我教观音送你，不怕他不收。好生保护他去，那时功成归极乐，汝亦坐莲台。”&lt;br&gt;经过这一场闹剧，孙悟空明确的被如来内定为预备佛员，这是对他敢打师父的一种肯定，一种奖励！唐僧呢，这个刁酸无能的泼秃领导吃了哑巴亏，白挨了一顿揍。这种人欠揍，揍他一顿，他自然就老实了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;看《西游记》第五十七回，说是“六耳猕猴”化作孙悟空的摸样，伤了唐僧，后又和孙悟空大打出手。。。这位假孙悟空，实力不用多说了吧，和真孙悟空一般无二，大战孙悟空，闹到上天入地下海。在唐僧那：念紧箍咒，两个都喊疼，自然看不出哪个真假；到天宫：拖塔天王拿照妖镜照，也看不出；又到观音
    
    </summary>
    
    
      <category term="西游记" scheme="http://mmrxia.github.io/tags/%E8%A5%BF%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>西天取经路上只有一个妖怪</title>
    <link href="http://mmrxia.github.io/2016/05/14/%E8%A5%BF%E5%A4%A9%E5%8F%96%E7%BB%8F%E8%B7%AF%E4%B8%8A%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%AA%E5%A6%96%E6%80%AA/"/>
    <id>http://mmrxia.github.io/2016/05/14/西天取经路上只有一个妖怪/</id>
    <published>2016-05-14T01:26:48.000Z</published>
    <updated>2016-05-17T07:04:29.535Z</updated>
    
    <content type="html">&lt;h3 id=&quot;白骨精是谁？&quot;&gt;&lt;a href=&quot;#白骨精是谁？&quot; class=&quot;headerlink&quot; title=&quot;白骨精是谁？&quot;&gt;&lt;/a&gt;&lt;strong&gt;白骨精是谁？&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;白骨精是白虎岭上一具女尸的骨架，受天地精华后，变成的妖精。西游记里并没有记载这具女尸到底是什么来历。在明末清初的一些民间小说和故事书中零星有些记载，大致是，白骨精原本是白虎岭上一户普通人家的女儿。长到十七八岁的时候，被当地富户强行掠走。遭到淫虐后，被遗弃荒山，冻饿而死。&lt;/p&gt;
&lt;p&gt;她死的时候恰好是农历七月十五，是天地阴阳相合的日子，所以冤魂没能上天入地，而是在人间游荡。虽是游荡，但一直不肯离开自己的尸体，直至尸体化为白骨。姑娘的游魂吸取天地精华，围绕白骨，化为人形，从此对人恨之入骨，以吸人血为生。由于修炼的年岁太少，她只有一般的变化法力，属于妖界微不足道的小角色。&lt;/p&gt;
&lt;p&gt;妖是什么？其实是天上神仙的奴隶。所有修炼到一定果位的神仙，都会到妖界选一个坐骑，能成为神仙坐骑，是所有妖精最快的上升通道。修炼很苦，只有成为神仙才能上升到贵族阶层，从此不再遭受妖界的痛苦与磨砺。白骨精之所以会选择唐僧下手，是因为她无论如何修炼，都没有机会做神仙。&lt;/p&gt;
&lt;p&gt;你想，哪位神仙会选一堆白骨作坐骑啊？每次神仙来妖界选坐骑，她都会去应聘，但每次都失败。她已经放弃了通过当坐骑上升的门道，而是选择走捷径。当听说吃了唐僧肉便可长生不老，成为神仙时，她毫不犹豫地盯上了唐僧师徒。尽管她知道自己不是孙悟空的对手，但还是选择下手。因为，她已经无路可走。&lt;/p&gt;
&lt;h3 id=&quot;唐僧是谁？&quot;&gt;&lt;a href=&quot;#唐僧是谁？&quot; class=&quot;headerlink&quot; title=&quot;唐僧是谁？&quot;&gt;&lt;/a&gt;&lt;strong&gt;唐僧是谁？&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;为什么白骨精遇到唐僧师徒会有那么强烈的戏剧性？我们先来看下这帮取经人是什么身份。先看唐僧，其实他是如来二弟子金蝉长老转世。他去人间转世投胎的理由很简单——轻慢佛法，被如来打入凡尘。如来真的对他很失望吗？其实没有。他刚被打入凡尘后，如来就后悔了。但是，作为佛界的一把手，他也不能出尔反尔啊。&lt;/p&gt;
&lt;p&gt;如来心里的小九九早被观音菩萨看到了。喜欢察言观色的观音菩萨以宣传佛法为理由，启动了取经工程。这么大的机会，无论给谁都能成佛，获得果位。观音菩萨去人间辛苦选角回来，告诉如来，除了如来朝思暮想的金蝉长老转世的陈玄奘外，没有人能完成这项工程。如来一听很高兴，就让观音菩萨操办去了。&lt;/p&gt;
&lt;p&gt;作为取经形象工程的总策划，观音菩萨办事非常周密。她先找来各路菩萨和神仙，希望大家都能为这项工程出点力。尤其是应该让自家的坐骑妖怪都出来捣捣乱，也显示下取经的难度，同时也在关键时刻露露脸，让如来知道，大家都一心向着中央，一直在帮助金蝉长老过关。各路菩萨走后，观音菩萨找到陈玄奘，告诉他，妖怪都是自家人放出来的，为了显示取经的难度，让如来重用他，也算是好有个台阶下。&lt;/p&gt;
&lt;p&gt;唐僧很聪明，一心想回灵山，所以当然愿意了。不过，所有的事情都没那么简单。天上也有人事关系，天上也有潜规则。观音菩萨张罗了一个这么好的取经工程，谁参与谁都会功成名就，那肯定一帮人惦记着。同时，观音菩萨自己也不会放过这次机会啊。所以他选择的第一个参与项目的人就是孙悟空。&lt;/p&gt;
&lt;h3 id=&quot;孙悟空那些事&quot;&gt;&lt;a href=&quot;#孙悟空那些事&quot; class=&quot;headerlink&quot; title=&quot;孙悟空那些事&quot;&gt;&lt;/a&gt;&lt;strong&gt;孙悟空那些事&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;不要以为观音菩萨选孙悟空是因为他能打能杀，可以保唐僧去取经。其实与这些一点毛关系都没有。孙悟空是谁？其实他是菩提老祖的私生子。小时候，他只可以看到菩提老祖，却看不到妈妈，就很好奇问老祖，他是哪儿来的。菩提老祖告诉他，他是石头缝里变出来的。一向傻乐呵的孙悟空快1千岁的时候才知道自己的真实身世。&lt;/p&gt;
&lt;p&gt;菩提老祖的这个秘密只有观音菩萨知道。观音菩萨为什么会帮菩提老祖保守秘密呢？是因为菩提老祖太牛逼了。他是谁？他是成佛比如来还早的佛陀。由于如来的佛法更高深，年龄与佛龄都高于如来的菩提老祖，甘愿成为如来的追随者。如来让菩提老祖三分，一直另眼相看。菩提老祖在佛教中是须菩提，他与佛祖的对话便是《金刚经》。&lt;/p&gt;
&lt;p&gt;实际上，菩提老祖是儒释道精通的神仙，法力高于如来，但又遵从如来。菩提老祖就孙悟空一个儿子，所以一直很娇惯他。他私下教会了孙悟空很多法力，并禁止孙悟空叫他师傅，也不允许他在任何场合提到自己。孙悟空与菩提老祖闹翻，跑了出去。菩提老祖怕他惹事，便把孙悟空托付给观音菩萨管教。&lt;/p&gt;
&lt;p&gt;观音菩萨哪管得了他，他兴风作浪，干了很多坏事。尤其是把玉皇大帝都给揍了。如来本来要灭了他，结果观音菩萨暗示他不要这样做，如来领会，就把孙悟空压到五行山下五百年。菩提老祖与如来都是大牛，观音菩萨谁都不敢得罪，所以她一直等待机会救出孙悟空，给菩提老祖一个交代。&lt;/p&gt;
&lt;p&gt;这不，唐僧取经的工程资金都批下来了，没什么比随唐僧取经更合适的项目了。一来让如来有台阶下，二来也是给菩提老祖一个面子，算是完成了托付的重任。一开始，唐僧非常讨厌孙悟空，绝对不想和他合作。唐僧心里清楚，所有的妖怪都是观音菩萨阿姨找来的托儿，一旦孙猴子胡乱打，岂不是全给得罪了。&lt;/p&gt;
&lt;h3 id=&quot;其他的关系户&quot;&gt;&lt;a href=&quot;#其他的关系户&quot; class=&quot;headerlink&quot; title=&quot;其他的关系户&quot;&gt;&lt;/a&gt;&lt;strong&gt;其他的关系户&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;不要以为唐僧、悟空外的几个人就清白了。猪八戒是天蓬元帅，掌管天河，所谓天河不过是银河罢了。也就是说，猪八戒是银河系的一把手。实际上他是紫薇大帝手上最亮的一颗星——北斗七星中最亮的一颗。紫薇大帝的坐骑是北斗七星，而猪八戒是最亮的一颗。他被贬下界是因为他把嫦娥给睡了。很多人不知道，玉帝把嫦娥带到天庭原本想娶他为妃，无奈王母娘娘很不高兴，发动自家亲戚的力量，差点毁了玉帝的统治。&lt;/p&gt;
&lt;p&gt;让嫦娥当舞女是玉帝与王母相互妥协的结果。玉帝每天看嫦娥跳舞，却睡不得，这让他很扫兴。嫦娥在广寒宫整天思春，郁闷不乐。猪八戒跑过去陪她聊天，并成功把嫦娥给睡了。这件事让玉帝火冒三丈，于是把猪八戒贬入凡尘。自己最喜欢的坐骑没了，紫薇大帝很不高兴，猪八戒是他最喜欢的坐骑。然而，如来扫平魔界，建立佛国世界时，紫薇大帝一直是所有光明的提供者，照亮如来的路，如来一直无以为报。观音菩萨于是找到凡间流浪的猪八戒，将他编入了取经队伍，算是对紫薇大帝一个交代。&lt;/p&gt;
&lt;p&gt;沙和尚是谁？他是卷帘大将，但真实的身份是玉皇大帝四女儿四仙女的相好。玉帝知道他与女儿相好后，便以打碎了某某东东为由，将他打入凡尘。王母支持四女儿，反抗玉帝，让玉帝很后悔自己的决定。当观音菩萨刚宣布要组织取经工程时，王母娘娘就知道了这件事。为了自己女儿的幸福，她拿一箩筐蟠桃，让观音菩萨把沙悟净也编入了取经队伍。&lt;/p&gt;
&lt;p&gt;小白龙更不用说了。他是西海龙王的三太子，因为纵火烧了玉帝赏赐的明珠而被判斩首。结果观音菩萨求情，免于一死，被压在了山涧里。你可能会奇怪，观音菩萨为什么会为小白龙说情。其实是这样的，观音菩萨又叫南海观音，她常驻的地方在南海。南海是南海龙王的地盘，也就是小白龙叔叔的地盘。&lt;/p&gt;
&lt;p&gt;三太子很小时的时候经常去观音菩萨那里玩，观音菩萨很喜欢他，视若己出。他犯事后，把他压在山涧里加以保护也是观音菩萨的主意。取经工程刚出来消息，西海龙王、南海龙王、东海龙王、北海龙王全都齐聚南海，求观音帮忙。把小白龙安排进来也是顺理成章的事情。&lt;/p&gt;
&lt;h3 id=&quot;为什么不能降妖？&quot;&gt;&lt;a href=&quot;#为什么不能降妖？&quot; class=&quot;headerlink&quot; title=&quot;为什么不能降妖？&quot;&gt;&lt;/a&gt;&lt;strong&gt;为什么不能降妖？&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;唐僧师徒几个，唯有唐僧心里最清楚，路上根本没有什么妖怪，都是自己人当托的。所以吗，见到妖怪不要随便打，一不小心就打到自己的亲戚了。再说，观音菩萨一直背后跟着，真实遇到了妖怪猛兽，观音会保证安全的。&lt;/p&gt;
&lt;p&gt;孙悟空等四个却不知道妖怪的真实身份，再加上他们本来就很暴烈，一上路就烧杀抢掠。为了限制孙悟空，唐僧再三要求观音菩萨要驯服他。菩萨选了折衷的办法，给他戴上了紧箍。尽管如此，孙悟空依然野性不改。打白骨精是唐僧与孙悟空矛盾的最高点。&lt;/p&gt;
&lt;p&gt;白骨精是唐僧取经路上唯一一个真妖怪，她目标明确，就是要吃唐僧肉，成为神仙，逃离魔界的痛苦。白骨精被打死后，唐僧吓死了。如果这个白骨精是某个菩萨手上的人或坐骑，那他的取经工程就有可能被叫停。所以他第一时间念了紧箍咒，把孙猴子赶走了。&lt;/p&gt;
&lt;p&gt;观音菩萨去请孙猴子回来，没跟他说实话，但点拨了他，告诉他，只要发现妖怪，去菩萨们那里问问就好了。孙悟空得到点拨后学精了，一旦遇到妖怪，并不好好打，而是先跑到天上打听一番，是谁家的，谁来管管。结果，一路上很顺利，几乎没遇到任何真正的危险便到了灵山，取了真经。&lt;/p&gt;
&lt;h3 id=&quot;结尾&quot;&gt;&lt;a href=&quot;#结尾&quot; class=&quot;headerlink&quot; title=&quot;结尾&quot;&gt;&lt;/a&gt;&lt;strong&gt;结尾&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;看了上面的分析你是否有种无奈的感觉？&lt;br&gt;白骨精的故事是中国流传数百年的悲剧——屌丝向上爬的道路永远是不通的；没有背景和身份是没法做大事的；一切形象工程都有同样的逻辑。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;白骨精是谁？&quot;&gt;&lt;a href=&quot;#白骨精是谁？&quot; class=&quot;headerlink&quot; title=&quot;白骨精是谁？&quot;&gt;&lt;/a&gt;&lt;strong&gt;白骨精是谁？&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;白骨精是白虎岭上一具女尸的骨架，受天地精华后，变成的妖精。西游记里并没有记
    
    </summary>
    
    
      <category term="西游记" scheme="http://mmrxia.github.io/tags/%E8%A5%BF%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>js浮点数计算精度丢失问题及解决方案</title>
    <link href="http://mmrxia.github.io/2016/05/11/js%E6%B5%AE%E7%82%B9%E6%95%B0%E8%AE%A1%E7%AE%97%E7%B2%BE%E5%BA%A6%E4%B8%A2%E5%A4%B1%E9%97%AE%E9%A2%98/"/>
    <id>http://mmrxia.github.io/2016/05/11/js浮点数计算精度丢失问题/</id>
    <published>2016-05-11T09:22:45.000Z</published>
    <updated>2016-05-12T01:57:30.149Z</updated>
    
    <content type="html">&lt;p&gt; 本文主要从以下3个方面来说明：&lt;/p&gt;
&lt;p&gt; 1 . js浮点数计算精度丢失常见现象&lt;br&gt; 2 . js浮点数计算精度丢失原因&lt;br&gt; 3 . js浮点数计算精度丢失解决办法&lt;/p&gt;
&lt;h3 id=&quot;一、常见现象&quot;&gt;&lt;a href=&quot;#一、常见现象&quot; class=&quot;headerlink&quot; title=&quot;一、常见现象&quot;&gt;&lt;/a&gt;一、常见现象&lt;/h3&gt;&lt;p&gt; 1 . 两个简单的浮点数相加或相乘&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 0.1 + 0.2 != 0.3 // true  0.30000000000000004
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; 又如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 0.29 * 100  // 28.999999999999996
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; 2 . 大整数运算&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 9999999999999999 == 10000000000000001 // true  16位和17位数竟然相等...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; 又如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; var x = 9007199254740992
 x + 1 == x // true
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;二、原因&quot;&gt;&lt;a href=&quot;#二、原因&quot; class=&quot;headerlink&quot; title=&quot;二、原因&quot;&gt;&lt;/a&gt;二、原因&lt;/h3&gt;&lt;p&gt; &lt;strong&gt;计算机的二进制实现和位数限制有些数无法有限表示。&lt;/strong&gt;&lt;br&gt; 就像一些无理数不能有限表示，如 圆周率 3.1415926…，1.3333… 等。JS 遵循 &lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_floating_point&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;IEEE 754&lt;/a&gt; 规范，采用双精度存储（double precision），占用 64 bit。如图：&lt;br&gt; &lt;img src=&quot;http://7xth8v.com2.z0.glb.clouddn.com/image/n_64bit.png?imageView2/2/w/800&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt; 图中的意义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1位用来表示符号位&lt;/li&gt;
&lt;li&gt;11位用来表示指数&lt;/li&gt;
&lt;li&gt;52位表示尾数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; 浮点数，比如&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 0.1 &amp;gt;&amp;gt; 0.0001 1001 1001 1001…（1001无限循环）
 0.2 &amp;gt;&amp;gt; 0.0011 0011 0011 0011…（0011无限循环）
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; 此时只能模仿十进制进行四舍五入了，但是二进制只有 0 和 1 两个，于是变为 0 舍 1 入。这即是计算机中部分浮点数运算时出现误差，丢失精度的根本原因。&lt;br&gt; 大整数的精度丢失和浮点数本质上是一样的，尾数位最大是 52 位，因此 JS 中能精准表示的最大整数是 &lt;code&gt;Math.pow(2, 53)&lt;/code&gt;，十进制即 &lt;code&gt;9007199254740992&lt;/code&gt;。&lt;br&gt; 大于 &lt;code&gt;9007199254740992&lt;/code&gt; 的可能会丢失精度。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 9007199254740992     &amp;gt;&amp;gt; 10000000000000...000 // 共计 53 个 0
 9007199254740992 + 1 &amp;gt;&amp;gt; 10000000000000...001 // 中间 52 个 0
 9007199254740992 + 2 &amp;gt;&amp;gt; 10000000000000...010 // 中间 51 个 0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; 实际上&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 9007199254740992 + 1 // 丢失
 9007199254740992 + 2 // 未丢失
 9007199254740992 + 3 // 丢失
 9007199254740992 + 4 // 未丢失
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; 以上，可以知道看似有穷的数字, 在计算机的二进制表示里却是无穷的，由于存储位数限制因此存在“舍去”，精度丢失就发生了。&lt;/p&gt;
&lt;p&gt; 想了解更深入的分析可以看这篇论文：&lt;a href=&quot;http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;What Every Computer Scientist Should Know About Floating-Point Arithmetic&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;三、解决方案&quot;&gt;&lt;a href=&quot;#三、解决方案&quot; class=&quot;headerlink&quot; title=&quot;三、解决方案&quot;&gt;&lt;/a&gt;三、解决方案&lt;/h3&gt;&lt;p&gt; 对于整数，前端出现问题的几率可能比较低，毕竟很少有业务需要需要用到超大整数，只要运算结果不超过 &lt;code&gt;Math.pow(2, 53)&lt;/code&gt; 就不会丢失精度。&lt;br&gt; 对于小数，前端出现问题的几率还是很多的，尤其在一些电商网站涉及到金额等数据。解决方式：把小数放到位整数（乘倍数），再缩小回原来倍数（除倍数），如下所示：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; // 0.1 + 0.2
 (0.1*10 + 0.2*10) / 10 == 0.3 // true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; 代码实现如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt; var Calc = function () {
     /*
      * 将浮点数去除小数点，返回整数和倍数。如 3.14 &amp;gt;&amp;gt; 314，倍数是 100
      * @param n {number} 浮点数
      * return {object} 
      * {num: 314, times: 100}
      * */
     function toInt(n) {
         var n = +n, res = {num: n, times: 1};
         if (n !== (n | 0)) { //判断浮点数，n===parseInt(n)
             var arr = (&amp;#39;&amp;#39; + n).split(&amp;#39;.&amp;#39;);
             var len = arr[1].length; //小数长度
             res.times = Math.pow(10, len); //需要乘的倍数=&amp;gt;10的指数
             res.num = Math.round(n * res.times); //四舍五入取整
         }
         return res;
     }

     function operation(a, b, op) {
         var result; //最终计算的值
         var o1 = toInt(a), o2 = toInt(b);

         var n1 = o1.num, t1 = o1.times;
         var n2 = o2.num, t2 = o2.times;

         var max = Math.max(t1, t2);

         switch (op) {
             case &amp;#39;add&amp;#39;:
                 if (t1 &amp;gt; t2) {
                     result = n1 + n2 * (t1 / t2);
                 } else {
                     result = n2 + n1 * (t2 / t1);
                 }
                 result = result / max;
                 break;
             case &amp;#39;subtract&amp;#39;:
                 if (t1 &amp;gt; t2) {
                     result = n1 - n2 * (t1 / t2);
                 } else {
                     result = n2 - n1 * (t2 / t1);
                 }
                 result = result / max;
                 break;
             case &amp;#39;multiply&amp;#39;:
                 result = (n1 * n2) / (t1 * t2)
                 return result
                 break;
             case &amp;#39;divide&amp;#39;:
                 result = (n1 / n2) * (t2 / t1)
                 return result
                 break;

         }
         return result;
     }

     /*加*/
     function add(a, b) {
         return operation(a, b, &amp;#39;add&amp;#39;);
     }

     /*减*/
     function subtract(a, b) {
         return operation(a, b, &amp;#39;subtract&amp;#39;);
     }

     /*乘*/
     function multiply(a, b) {
         return operation(a, b, &amp;#39;multiply&amp;#39;);
     }

     /*除*/
     function divide(a, b) {
         return operation(a, b, &amp;#39;divide&amp;#39;);
     }

     //exports
     return {
         add: add,
         subtract: subtract,
         multiply: multiply,
         divide: divide
     }
 }();
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h3&gt;&lt;p&gt; &lt;a href=&quot;http://0.30000000000000004.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://0.30000000000000004.com&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt; 本文主要从以下3个方面来说明：&lt;/p&gt;
&lt;p&gt; 1 . js浮点数计算精度丢失常见现象&lt;br&gt; 2 . js浮点数计算精度丢失原因&lt;br&gt; 3 . js浮点数计算精度丢失解决办法&lt;/p&gt;
&lt;h3 id=&quot;一、常见现象&quot;&gt;&lt;a href=&quot;#一、常见现象&quot; class=&quot;h
    
    </summary>
    
    
      <category term="js" scheme="http://mmrxia.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>跨域的几种方式</title>
    <link href="http://mmrxia.github.io/2016/05/09/%E8%B7%A8%E5%9F%9F%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    <id>http://mmrxia.github.io/2016/05/09/跨域的几种方式/</id>
    <published>2016-05-09T07:37:30.000Z</published>
    <updated>2016-05-09T08:06:05.872Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;跨域，怎么处理跨域问题？无论是在面试中，还是在工作当中，总是会经常被问到，所以在这里总结下跨域的几种处理方式好了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;1-jsonp方式&quot;&gt;&lt;a href=&quot;#1-jsonp方式&quot; class=&quot;headerlink&quot; title=&quot;1 . jsonp方式&quot;&gt;&lt;/a&gt;1 . jsonp方式&lt;/h3&gt;&lt;p&gt;在js中，我们直接用&lt;code&gt;XMLHttpRequest&lt;/code&gt;请求不同域上的数据是不可以的，而在html中，能够实现跨域的就几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;link属性（css）&lt;/li&gt;
&lt;li&gt;href属性（a标签）&lt;/li&gt;
&lt;li&gt;src（img标签、script标签）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了解决跨域的问题，结合script能够发起跨域请求的原理，产生了jsonp，即：动态的创建script标签，跨域的地址加上需要传送的数据和回调函数为script标签的src地址，执行完之后再动态的删除之前创建的script.&lt;/p&gt;
&lt;p&gt;理解了原理之后，就很容易明白jsonp的缺点了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只能用get方式请求，因为是使用src来传送数据&lt;/li&gt;
&lt;li&gt;数据中出现中文需要编码。因为通过url传参数，可以在浏览器输入地址并带上中文参数试试&lt;/li&gt;
&lt;li&gt;src对请求的地址没有限制，会出现安全性的问题&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-document-domain&quot;&gt;&lt;a href=&quot;#2-document-domain&quot; class=&quot;headerlink&quot; title=&quot;2 . document.domain&quot;&gt;&lt;/a&gt;2 . document.domain&lt;/h3&gt;&lt;p&gt;看到这个跨域方式，可能有些同学会觉得陌生，其实这个也很常用。&lt;br&gt;每次遇到有需要使用登录之类的项目，在开发的时候都需要将地址改成163的域名，为啥？在控制台打印一下&lt;code&gt;document.domain&lt;/code&gt;试试,这篇文章的控制台输出的是&lt;code&gt;feg.netease.com&lt;/code&gt;，而在有使用到163登录的项目中，输出的都是&lt;code&gt;163.com&lt;/code&gt;。登录组件限制在163域名下才能用，但是163的域名有很多，避免不同域名之间出现通信问题，使用&lt;code&gt;document.domain&lt;/code&gt;的方式将页面的主域名改成了&lt;code&gt;163.com&lt;/code&gt;。这种方式主要用在主域名能设置成相同的页面之间的通信。如&lt;code&gt;http://xyq.163.com/&lt;/code&gt;，它的主域名可以是&lt;code&gt;xyq.163.com&lt;/code&gt;或&lt;code&gt;163.com&lt;/code&gt;；&lt;code&gt;http://xsd.163.com&lt;/code&gt;，它的主域名可以是&lt;code&gt;xsd.163.com&lt;/code&gt;或&lt;code&gt;163.com&lt;/code&gt;，所以这两个站点下的页面能够将主域名设置成163.com。&lt;/p&gt;
&lt;h3 id=&quot;3-使用iframe&quot;&gt;&lt;a href=&quot;#3-使用iframe&quot; class=&quot;headerlink&quot; title=&quot;3 . 使用iframe&quot;&gt;&lt;/a&gt;3 . 使用iframe&lt;/h3&gt;&lt;p&gt;这种方式利用了window对象name属性的特征：在一个窗口(window)的生命周期内,窗口载入的所有的页面都是共享一个window.name的，每个页面对window.name都有读写的权限，window.name是持久存在一个窗口载入过的所有页面中的，并不会因新页面的载入而进行重置。&lt;/p&gt;
&lt;h3 id=&quot;4-Access-Control-Allow-Origin&quot;&gt;&lt;a href=&quot;#4-Access-Control-Allow-Origin&quot; class=&quot;headerlink&quot; title=&quot;4 . Access-Control-Allow-Origin&quot;&gt;&lt;/a&gt;4 . Access-Control-Allow-Origin&lt;/h3&gt;&lt;p&gt;正常情况下我们的接口都是jsonp的格式，可是万一遇到其它格式的接口怎么办？比如json格式，这个时候可以通过&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;来实现跨域。这种方式主要是后台同学配置，接口使用&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;设置对应项目的域名，前端同学这边像平常调用接口一样，不需要再做其他处理。如下面的例子：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;   $.ajax({
       url: &amp;quot;http://api.ypw.163.com/api/app&amp;quot;,
       type: &amp;quot;POST&amp;quot;,
       data: JSON.stringify(postData),
       dataType: &amp;quot;application/json&amp;quot;,
       headers: {&amp;quot;X-Ypw-Token&amp;quot;: user_token, &amp;quot;Content-Type&amp;quot;: &amp;quot;application/json&amp;quot;},
       success: function(result) {
           renderPage(result);
       }
   });
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;data为需要传输的数据，dataType是接口的格式。比平常接口调用多了的headers部分，是这个接口考虑到安全性的问题，接口开发同学需要我添加一个key，并且把user_token用base64加密之后传输给他，并不是跨域需要设置的东西，即这种方式跟平常调用接口一样。&lt;br&gt;好像这种方式挺好用的。确实，可是最大的问题是ie7、8、9都还不支持，所以目前也就能用在移动端了。&lt;/p&gt;
&lt;h3 id=&quot;5-Chrome-–disable-web-security-快捷方式&quot;&gt;&lt;a href=&quot;#5-Chrome-–disable-web-security-快捷方式&quot; class=&quot;headerlink&quot; title=&quot;5 . Chrome –disable-web-security 快捷方式&quot;&gt;&lt;/a&gt;5 . Chrome –disable-web-security 快捷方式&lt;/h3&gt;&lt;p&gt;这种方式适用于Chrome浏览器，使浏览器支持跨域请求。在快捷方式的属性中配置&lt;code&gt;--args --disable-web-security --user-data-dir&lt;/code&gt;参数，如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xth8v.com2.z0.glb.clouddn.com/image/n_chrome_prop.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;跨域，怎么处理跨域问题？无论是在面试中，还是在工作当中，总是会经常被问到，所以在这里总结下跨域的几种处理方式好了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;1-jsonp方式&quot;&gt;&lt;a href=&quot;#1-jsonp方式&quot; class=&quot;h
    
    </summary>
    
    
      <category term="跨域" scheme="http://mmrxia.github.io/tags/%E8%B7%A8%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>git 常用命令速查表</title>
    <link href="http://mmrxia.github.io/2016/05/09/git-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E9%80%9F%E6%9F%A5%E8%A1%A8/"/>
    <id>http://mmrxia.github.io/2016/05/09/git-常用命令速查表/</id>
    <published>2016-05-09T07:17:43.000Z</published>
    <updated>2016-05-09T07:34:05.237Z</updated>
    
    <content type="html">&lt;p&gt;git作为代码管理工具的好处，这里就不多说了，目前也有很多git操作的可视化工具，如：TortoiseGit、SourceTree等。&lt;br&gt;相比可视化工具，笔者还是更喜欢使用原始命令来进行操作，下面附一张git常用命令速查表，以备不时之需。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xth8v.com2.z0.glb.qiniucdn.com/image/git_common_order.jpg&quot; alt=&quot;git常用命令&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;git作为代码管理工具的好处，这里就不多说了，目前也有很多git操作的可视化工具，如：TortoiseGit、SourceTree等。&lt;br&gt;相比可视化工具，笔者还是更喜欢使用原始命令来进行操作，下面附一张git常用命令速查表，以备不时之需。&lt;/p&gt;
&lt;p&gt;&lt;img src
    
    </summary>
    
    
      <category term="git" scheme="http://mmrxia.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>SKU算法总结分享</title>
    <link href="http://mmrxia.github.io/2016/04/26/SKU%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93%E5%88%86%E4%BA%AB/"/>
    <id>http://mmrxia.github.io/2016/04/26/SKU算法总结分享/</id>
    <published>2016-04-26T08:28:49.000Z</published>
    <updated>2016-04-28T09:30:18.479Z</updated>
    
    <content type="html">&lt;h4 id=&quot;1-SKU简介&quot;&gt;&lt;a href=&quot;#1-SKU简介&quot; class=&quot;headerlink&quot; title=&quot;1. SKU简介&quot;&gt;&lt;/a&gt;1. SKU简介&lt;/h4&gt;&lt;p&gt;下面是SKU来自维基百科的解释：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;最小存货单位&lt;/strong&gt;（Stock Keeping Unit, SKU）是一个会计学名词，定义为保存库存控制的最小可用单位，例如纺织品中一个SKU通常表示规格、颜色、款式，而在连锁零售门店中有时称单品为一个SKU。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;直观一点的实际应用，可以参考淘宝的商品SKU选择界面，如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xth8v.com2.z0.glb.qiniucdn.com/image/sku.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;2-基础数据&quot;&gt;&lt;a href=&quot;#2-基础数据&quot; class=&quot;headerlink&quot; title=&quot;2. 基础数据&quot;&gt;&lt;/a&gt;2. 基础数据&lt;/h4&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;    //属性集
    var keys = [
        [&amp;#39;10&amp;#39;],  //iPhone7s
        [&amp;#39;20&amp;#39;,&amp;#39;21&amp;#39;,&amp;#39;22&amp;#39;,&amp;#39;23&amp;#39;,&amp;#39;24&amp;#39;],  //土豪金,白色,黑色,灰色,粉色
        [&amp;#39;30&amp;#39;,&amp;#39;31&amp;#39;,&amp;#39;32&amp;#39;,&amp;#39;33&amp;#39;,&amp;#39;34&amp;#39;,&amp;#39;35&amp;#39;,&amp;#39;36&amp;#39;,&amp;#39;37&amp;#39;,&amp;#39;38&amp;#39;],  //港版，大陆行货，亚太版，美版，韩版，日版，意大利版，俄罗斯版，欧版
        [&amp;#39;40&amp;#39;] //4.7寸
    ];
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-javascript&quot;&gt;    //后台读取结果集
    var data = {
        &amp;quot;10;24;31;40&amp;quot;:{&amp;quot;price&amp;quot;:366,&amp;quot;count&amp;quot;:46},
        &amp;quot;10;24;33;40&amp;quot;:{&amp;quot;price&amp;quot;:416,&amp;quot;count&amp;quot;:77},
        &amp;quot;10;24;34;40&amp;quot;:{&amp;quot;price&amp;quot;:456,&amp;quot;count&amp;quot;:9},
        &amp;quot;10;24;35;40&amp;quot;:{&amp;quot;price&amp;quot;:371,&amp;quot;count&amp;quot;:33},
        &amp;quot;10;24;36;40&amp;quot;:{&amp;quot;price&amp;quot;:411,&amp;quot;count&amp;quot;:79},
        &amp;quot;10;24;37;40&amp;quot;:{&amp;quot;price&amp;quot;:421,&amp;quot;count&amp;quot;:87},
        &amp;quot;10;24;38;40&amp;quot;:{&amp;quot;price&amp;quot;:461,&amp;quot;count&amp;quot;:9},
        &amp;quot;10;23;32;40&amp;quot;:{&amp;quot;price&amp;quot;:406,&amp;quot;count&amp;quot;:9},
        &amp;quot;10;23;33;40&amp;quot;:{&amp;quot;price&amp;quot;:416,&amp;quot;count&amp;quot;:90},
        &amp;quot;10;23;36;40&amp;quot;:{&amp;quot;price&amp;quot;:411,&amp;quot;count&amp;quot;:90},
        &amp;quot;10;23;37;40&amp;quot;:{&amp;quot;price&amp;quot;:421,&amp;quot;count&amp;quot;:10},
        &amp;quot;10;23;38;40&amp;quot;:{&amp;quot;price&amp;quot;:461,&amp;quot;count&amp;quot;:9},
        &amp;quot;10;22;35;40&amp;quot;:{&amp;quot;price&amp;quot;:361,&amp;quot;count&amp;quot;:25},
        &amp;quot;10;21;33;40&amp;quot;:{&amp;quot;price&amp;quot;:416,&amp;quot;count&amp;quot;:10},
        &amp;quot;10;21;38;40&amp;quot;:{&amp;quot;price&amp;quot;:461,&amp;quot;count&amp;quot;:80},
        &amp;quot;10;21;30;40&amp;quot;:{&amp;quot;price&amp;quot;:356,&amp;quot;count&amp;quot;:43},
        &amp;quot;10;20;31;40&amp;quot;:{&amp;quot;price&amp;quot;:356,&amp;quot;count&amp;quot;:46},
        &amp;quot;10;20;32;40&amp;quot;:{&amp;quot;price&amp;quot;:396,&amp;quot;count&amp;quot;:49},
        &amp;quot;10;20;35;40&amp;quot;:{&amp;quot;price&amp;quot;:361,&amp;quot;count&amp;quot;:34},
        &amp;quot;10;20;36;40&amp;quot;:{&amp;quot;price&amp;quot;:401,&amp;quot;count&amp;quot;:41},
        &amp;quot;10;20;30;40&amp;quot;:{&amp;quot;price&amp;quot;:346,&amp;quot;count&amp;quot;:3}
    };
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;3-算法分析&quot;&gt;&lt;a href=&quot;#3-算法分析&quot; class=&quot;headerlink&quot; title=&quot;3. 算法分析&quot;&gt;&lt;/a&gt;3. 算法分析&lt;/h4&gt;&lt;h4 id=&quot;4-代码实现&quot;&gt;&lt;a href=&quot;#4-代码实现&quot; class=&quot;headerlink&quot; title=&quot;4. 代码实现&quot;&gt;&lt;/a&gt;4. 代码实现&lt;/h4&gt;&lt;h4 id=&quot;5-demo演示&quot;&gt;&lt;a href=&quot;#5-demo演示&quot; class=&quot;headerlink&quot; title=&quot;5. demo演示&quot;&gt;&lt;/a&gt;5. demo演示&lt;/h4&gt;</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-SKU简介&quot;&gt;&lt;a href=&quot;#1-SKU简介&quot; class=&quot;headerlink&quot; title=&quot;1. SKU简介&quot;&gt;&lt;/a&gt;1. SKU简介&lt;/h4&gt;&lt;p&gt;下面是SKU来自维基百科的解释：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;最小存
    
    </summary>
    
    
      <category term="sku" scheme="http://mmrxia.github.io/tags/sku/"/>
    
      <category term="算法" scheme="http://mmrxia.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="随笔" scheme="http://mmrxia.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>markdown基本语法</title>
    <link href="http://mmrxia.github.io/2016/04/22/markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>http://mmrxia.github.io/2016/04/22/markdown基本语法/</id>
    <published>2016-04-22T08:47:01.000Z</published>
    <updated>2016-04-26T08:32:19.056Z</updated>
    
    <content type="html">&lt;h2 id=&quot;主要内容&quot;&gt;&lt;a href=&quot;#主要内容&quot; class=&quot;headerlink&quot; title=&quot;主要内容&quot;&gt;&lt;/a&gt;主要内容&lt;/h2&gt;&lt;blockquote&gt;
&lt;h4 id=&quot;Markdown是什么？&quot;&gt;&lt;a href=&quot;#Markdown是什么？&quot; class=&quot;headerlink&quot; title=&quot;Markdown是什么？&quot;&gt;&lt;/a&gt;Markdown是&lt;em&gt;什么&lt;/em&gt;？&lt;/h4&gt;&lt;h4 id=&quot;谁发明了这么个东西？&quot;&gt;&lt;a href=&quot;#谁发明了这么个东西？&quot; class=&quot;headerlink&quot; title=&quot;谁发明了这么个东西？&quot;&gt;&lt;/a&gt;&lt;em&gt;谁&lt;/em&gt;发明了这么个东西？&lt;/h4&gt;&lt;h4 id=&quot;为什么要使用它？&quot;&gt;&lt;a href=&quot;#为什么要使用它？&quot; class=&quot;headerlink&quot; title=&quot;为什么要使用它？&quot;&gt;&lt;/a&gt;&lt;em&gt;为什么&lt;/em&gt;要使用它？&lt;/h4&gt;&lt;h4 id=&quot;怎么使用？&quot;&gt;&lt;a href=&quot;#怎么使用？&quot; class=&quot;headerlink&quot; title=&quot;怎么使用？&quot;&gt;&lt;/a&gt;&lt;em&gt;怎么&lt;/em&gt;使用？&lt;/h4&gt;&lt;h4 id=&quot;都谁在用？&quot;&gt;&lt;a href=&quot;#都谁在用？&quot; class=&quot;headerlink&quot; title=&quot;都谁在用？&quot;&gt;&lt;/a&gt;都&lt;em&gt;谁&lt;/em&gt;在用？&lt;/h4&gt;&lt;h4 id=&quot;感觉有意思？不怕你看见，就怕你试试&quot;&gt;&lt;a href=&quot;#感觉有意思？不怕你看见，就怕你试试&quot; class=&quot;headerlink&quot; title=&quot;感觉有意思？不怕你看见，就怕你试试&quot;&gt;&lt;/a&gt;感觉有意思？&lt;em&gt;不怕你看见，就怕你试试&lt;/em&gt;&lt;/h4&gt;&lt;/blockquote&gt;
&lt;h2 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h2&gt;&lt;h3 id=&quot;1-Markdown是什么？&quot;&gt;&lt;a href=&quot;#1-Markdown是什么？&quot; class=&quot;headerlink&quot; title=&quot;1. Markdown是什么？&quot;&gt;&lt;/a&gt;1. Markdown是&lt;em&gt;什么&lt;/em&gt;？&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Markdown&lt;/strong&gt;是一种轻量级&lt;strong&gt;标记语言&lt;/strong&gt;，它以纯文本形式(&lt;em&gt;易读、易写、易更改&lt;/em&gt;)编写文档，并最终以HTML格式发布。&lt;br&gt;&lt;strong&gt;Markdown&lt;/strong&gt;也可以理解为将以MARKDOWN语言编写的语言转换成HTML内容的工具，最初是一个perl脚本&lt;em&gt;Markdown.pl&lt;/em&gt;。    &lt;/p&gt;
&lt;h3 id=&quot;2-谁发明了这么个东西？&quot;&gt;&lt;a href=&quot;#2-谁发明了这么个东西？&quot; class=&quot;headerlink&quot; title=&quot;2. 谁发明了这么个东西？&quot;&gt;&lt;/a&gt;2. &lt;em&gt;谁&lt;/em&gt;发明了这么个东西？&lt;/h3&gt;&lt;p&gt;它由&lt;a href=&quot;http://www.aaronsw.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;Aaron Swartz&lt;/strong&gt;&lt;/a&gt;和&lt;strong&gt;John Gruber&lt;/strong&gt;共同设计，&lt;strong&gt;Aaron Swartz&lt;/strong&gt;就是那位于去年（&lt;em&gt;2013年1月11日&lt;/em&gt;）自杀,有着&lt;strong&gt;开挂&lt;/strong&gt;一般人生经历的程序员。维基百科对他的&lt;a href=&quot;http://zh.wikipedia.org/wiki/%E4%BA%9A%E4%BC%A6%C2%B7%E6%96%AF%E6%B2%83%E8%8C%A8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;介绍&lt;/a&gt;是：&lt;strong&gt;软件工程师、作家、政治组织者、互联网活动家、维基百科人&lt;/strong&gt;。    &lt;/p&gt;
&lt;p&gt;他有着足以让你跪拜的人生经历：    &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;14岁&lt;/strong&gt;参与RSS 1.0规格标准的制订。     &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2004&lt;/strong&gt;年入读&lt;strong&gt;斯坦福&lt;/strong&gt;，之后退学。   &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2005&lt;/strong&gt;年创建&lt;a href=&quot;http://infogami.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Infogami&lt;/a&gt;，之后与&lt;a href=&quot;http://www.reddit.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Reddit&lt;/a&gt;合并成为其合伙人。   &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2010&lt;/strong&gt;年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案&lt;strong&gt;居然&lt;/strong&gt;被撤回。   &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2011&lt;/strong&gt;年7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。     &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;2013&lt;/strong&gt;年1月自杀身亡。    &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;天才都有早逝的归途（又是一位&lt;strong&gt;犹太人&lt;/strong&gt;）。&lt;/p&gt;
&lt;h3 id=&quot;3-为什么要使用它？&quot;&gt;&lt;a href=&quot;#3-为什么要使用它？&quot; class=&quot;headerlink&quot; title=&quot;3. 为什么要使用它？&quot;&gt;&lt;/a&gt;3. &lt;em&gt;为什么&lt;/em&gt;要使用它？&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;它是易读（&lt;em&gt;看起开舒服&lt;/em&gt;）、易写（&lt;em&gt;语法简单&lt;/em&gt;）、易更改&lt;strong&gt;纯文本&lt;/strong&gt;。处处体现着&lt;strong&gt;极简主义&lt;/strong&gt;的影子。&lt;/li&gt;
&lt;li&gt;兼容HTML，可以转换为HTML格式发布。&lt;/li&gt;
&lt;li&gt;跨平台使用。&lt;/li&gt;
&lt;li&gt;越来越多的网站支持Markdown。&lt;/li&gt;
&lt;li&gt;更方便清晰的组织你的电子邮件。（Markdown-here, Airmail）&lt;/li&gt;
&lt;li&gt;摆脱Word（我不是认真的）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;4-怎么使用？&quot;&gt;&lt;a href=&quot;#4-怎么使用？&quot; class=&quot;headerlink&quot; title=&quot;4. 怎么使用？&quot;&gt;&lt;/a&gt;4. &lt;em&gt;怎么&lt;/em&gt;使用？&lt;/h3&gt;&lt;p&gt;如果不算&lt;strong&gt;扩展&lt;/strong&gt;，Markdown的语法绝对&lt;strong&gt;简单&lt;/strong&gt;到让你爱不释手。&lt;/p&gt;
&lt;p&gt;废话太多，下面正文，Markdown语法主要分为如下几大部分：&lt;br&gt;&lt;strong&gt;标题&lt;/strong&gt;，&lt;strong&gt;段落&lt;/strong&gt;，&lt;strong&gt;区块引用&lt;/strong&gt;，&lt;strong&gt;代码区块&lt;/strong&gt;，&lt;strong&gt;强调&lt;/strong&gt;，&lt;strong&gt;列表&lt;/strong&gt;，&lt;strong&gt;分割线&lt;/strong&gt;，&lt;strong&gt;链接&lt;/strong&gt;，&lt;strong&gt;图片&lt;/strong&gt;，&lt;strong&gt;反斜杠 &lt;code&gt;\&lt;/code&gt;&lt;/strong&gt;，&lt;strong&gt;符号’`’&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&quot;4-1-标题&quot;&gt;&lt;a href=&quot;#4-1-标题&quot; class=&quot;headerlink&quot; title=&quot;4.1 标题&quot;&gt;&lt;/a&gt;4.1 标题&lt;/h4&gt;&lt;p&gt;两种形式：&lt;br&gt;1）使用&lt;code&gt;=&lt;/code&gt;和&lt;code&gt;-&lt;/code&gt;标记一级和二级标题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一级标题&lt;br&gt;&lt;code&gt;=========&lt;/code&gt;&lt;br&gt;二级标题&lt;br&gt;&lt;code&gt;---------&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;h1 id=&quot;一级标题&quot;&gt;&lt;a href=&quot;#一级标题&quot; class=&quot;headerlink&quot; title=&quot;一级标题   &quot;&gt;&lt;/a&gt;一级标题   &lt;/h1&gt;&lt;h2 id=&quot;二级标题&quot;&gt;&lt;a href=&quot;#二级标题&quot; class=&quot;headerlink&quot; title=&quot;二级标题&quot;&gt;&lt;/a&gt;二级标题&lt;/h2&gt;&lt;/blockquote&gt;
&lt;p&gt;2）使用&lt;code&gt;#&lt;/code&gt;，可表示1-6级标题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# 一级标题&lt;br&gt;## 二级标题&lt;br&gt;### 三级标题&lt;br&gt;#### 四级标题&lt;br&gt;##### 五级标题&lt;br&gt;###### 六级标题    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;h1 id=&quot;一级标题-1&quot;&gt;&lt;a href=&quot;#一级标题-1&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;h2 id=&quot;二级标题-1&quot;&gt;&lt;a href=&quot;#二级标题-1&quot; class=&quot;headerlink&quot; title=&quot;二级标题&quot;&gt;&lt;/a&gt;二级标题&lt;/h2&gt;&lt;h3 id=&quot;三级标题&quot;&gt;&lt;a href=&quot;#三级标题&quot; class=&quot;headerlink&quot; title=&quot;三级标题&quot;&gt;&lt;/a&gt;三级标题&lt;/h3&gt;&lt;h4 id=&quot;四级标题&quot;&gt;&lt;a href=&quot;#四级标题&quot; class=&quot;headerlink&quot; title=&quot;四级标题&quot;&gt;&lt;/a&gt;四级标题&lt;/h4&gt;&lt;h5 id=&quot;五级标题&quot;&gt;&lt;a href=&quot;#五级标题&quot; class=&quot;headerlink&quot; title=&quot;五级标题&quot;&gt;&lt;/a&gt;五级标题&lt;/h5&gt;&lt;h6 id=&quot;六级标题&quot;&gt;&lt;a href=&quot;#六级标题&quot; class=&quot;headerlink&quot; title=&quot;六级标题&quot;&gt;&lt;/a&gt;六级标题&lt;/h6&gt;&lt;/blockquote&gt;
&lt;h4 id=&quot;4-2-段落&quot;&gt;&lt;a href=&quot;#4-2-段落&quot; class=&quot;headerlink&quot; title=&quot;4.2 段落&quot;&gt;&lt;/a&gt;4.2 段落&lt;/h4&gt;&lt;p&gt;段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用&lt;strong&gt;两个以上&lt;/strong&gt;空格加上回车（引用中换行省略回车）。&lt;/p&gt;
&lt;h4 id=&quot;4-3-区块引用&quot;&gt;&lt;a href=&quot;#4-3-区块引用&quot; class=&quot;headerlink&quot; title=&quot;4.3 区块引用&quot;&gt;&lt;/a&gt;4.3 区块引用&lt;/h4&gt;&lt;p&gt;在段落的每行或者只在第一行使用符号&lt;code&gt;&amp;gt;&lt;/code&gt;,还可使用多个嵌套引用，如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&gt; 区块引用&lt;br&gt;&gt;&amp;gt; 嵌套引用  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;区块引用  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;嵌套引用 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;4-4-代码区块&quot;&gt;&lt;a href=&quot;#4-4-代码区块&quot; class=&quot;headerlink&quot; title=&quot;4.4 代码区块&quot;&gt;&lt;/a&gt;4.4 代码区块&lt;/h4&gt;&lt;p&gt;代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如&lt;br&gt;普通段落：&lt;/p&gt;
&lt;p&gt;void main()&lt;br&gt;{&lt;br&gt;    printf(“Hello, Markdown.”);&lt;br&gt;}    &lt;/p&gt;
&lt;p&gt;代码区块：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;void main()
{
    printf(&amp;quot;Hello, Markdown.&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;:需要和普通段落之间存在空行。&lt;/p&gt;
&lt;h4 id=&quot;4-5-强调&quot;&gt;&lt;a href=&quot;#4-5-强调&quot; class=&quot;headerlink&quot; title=&quot;4.5 强调&quot;&gt;&lt;/a&gt;4.5 强调&lt;/h4&gt;&lt;p&gt;在强调内容两侧分别加上&lt;code&gt;*&lt;/code&gt;或者&lt;code&gt;_&lt;/code&gt;，如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;*斜体*，_斜体_&lt;br&gt;**粗体**，__粗体__&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;斜体&lt;/em&gt;，&lt;em&gt;斜体&lt;/em&gt;&lt;br&gt;&lt;strong&gt;粗体&lt;/strong&gt;，&lt;strong&gt;粗体&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;4-6-列表&quot;&gt;&lt;a href=&quot;#4-6-列表&quot; class=&quot;headerlink&quot; title=&quot;4.6 列表&quot;&gt;&lt;/a&gt;4.6 列表&lt;/h4&gt;&lt;p&gt;使用&lt;code&gt;·&lt;/code&gt;、&lt;code&gt;+&lt;/code&gt;、或&lt;code&gt;-&lt;/code&gt;标记无序列表，如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;-（+*） 第一项&lt;br&gt;-（+*） 第二项&lt;br&gt;- （+*）第三项&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：标记后面最少有一个&lt;em&gt;空格&lt;/em&gt;或&lt;em&gt;制表符&lt;/em&gt;。若不在引用区块中，必须和前方段落之间存在空行。&lt;/p&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;第一项&lt;/li&gt;
&lt;li&gt;第二项&lt;/li&gt;
&lt;li&gt;第三项&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;有序列表的标记方式是将上述的符号换成数字,并辅以&lt;code&gt;.&lt;/code&gt;，如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1 . 第一项&lt;br&gt;2 . 第二项&lt;br&gt;3 . 第三项    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;第一项&lt;/li&gt;
&lt;li&gt;第二项&lt;/li&gt;
&lt;li&gt;第三项&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;4-7-分割线&quot;&gt;&lt;a href=&quot;#4-7-分割线&quot; class=&quot;headerlink&quot; title=&quot;4.7 分割线&quot;&gt;&lt;/a&gt;4.7 分割线&lt;/h4&gt;&lt;p&gt;分割线最常使用就是三个或以上&lt;code&gt;*&lt;/code&gt;，还可以使用&lt;code&gt;-&lt;/code&gt;和&lt;code&gt;_&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&quot;4-8-链接&quot;&gt;&lt;a href=&quot;#4-8-链接&quot; class=&quot;headerlink&quot; title=&quot;4.8 链接&quot;&gt;&lt;/a&gt;4.8 链接&lt;/h4&gt;&lt;p&gt;链接可以由两种形式生成：&lt;strong&gt;行内式&lt;/strong&gt;和&lt;strong&gt;参考式&lt;/strong&gt;。&lt;br&gt;&lt;strong&gt;行内式&lt;/strong&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[younghz的Markdown库](https:://github.com/younghz/Markdown “Markdown”)。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:://github.com/younghz/Markdown&quot; title=&quot;Markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;younghz的Markdown库&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;参考式&lt;/strong&gt;：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[younghz的Markdown库1][1]&lt;br&gt;[younghz的Markdown库2][2]&lt;br&gt;[1]:https:://github.com/younghz/Markdown “Markdown”&lt;br&gt;[2]:https:://github.com/younghz/Markdown “Markdown”    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:://github.com/younghz/Markdown&quot; title=&quot;Markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;younghz的Markdown库1&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https:://github.com/younghz/Markdown&quot; title=&quot;Markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;younghz的Markdown库2&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：上述的&lt;code&gt;[1]:https:://github.com/younghz/Markdown &amp;quot;Markdown&amp;quot;&lt;/code&gt;不出现在区块中。&lt;/p&gt;
&lt;h4 id=&quot;4-9-图片&quot;&gt;&lt;a href=&quot;#4-9-图片&quot; class=&quot;headerlink&quot; title=&quot;4.9 图片&quot;&gt;&lt;/a&gt;4.9 图片&lt;/h4&gt;&lt;p&gt;添加图片的形式和链接相似，只需在链接的基础上前方加一个&lt;code&gt;！&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&quot;4-10-反斜杠&quot;&gt;&lt;a href=&quot;#4-10-反斜杠&quot; class=&quot;headerlink&quot; title=&quot;4.10 反斜杠\&quot;&gt;&lt;/a&gt;4.10 反斜杠&lt;code&gt;\&lt;/code&gt;&lt;/h4&gt;&lt;p&gt;相当于&lt;strong&gt;反转义&lt;/strong&gt;作用。使符号成为普通符号。&lt;/p&gt;
&lt;h4 id=&quot;4-11-符号’-’&quot;&gt;&lt;a href=&quot;#4-11-符号’-’&quot; class=&quot;headerlink&quot; title=&quot;4.11 符号’`’&quot;&gt;&lt;/a&gt;4.11 符号’`’&lt;/h4&gt;&lt;p&gt;起到标记作用。如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;`ctrl+a`&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;ctrl+a&lt;/code&gt;    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;5-都谁在用？&quot;&gt;&lt;a href=&quot;#5-都谁在用？&quot; class=&quot;headerlink&quot; title=&quot;5. 都谁在用？&quot;&gt;&lt;/a&gt;5. 都&lt;em&gt;谁&lt;/em&gt;在用？&lt;/h4&gt;&lt;p&gt;Markdown的使用者：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub&lt;/li&gt;
&lt;li&gt;简书&lt;/li&gt;
&lt;li&gt;Stack Overflow&lt;/li&gt;
&lt;li&gt;Apollo&lt;/li&gt;
&lt;li&gt;Moodle&lt;/li&gt;
&lt;li&gt;Reddit&lt;/li&gt;
&lt;li&gt;等等&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;6-感觉有意思？趁热打铁，推荐几个工具。&quot;&gt;&lt;a href=&quot;#6-感觉有意思？趁热打铁，推荐几个工具。&quot; class=&quot;headerlink&quot; title=&quot;6. 感觉有意思？趁热打铁，推荐几个工具。&quot;&gt;&lt;/a&gt;6. 感觉有意思？趁热打铁，推荐几个&lt;em&gt;工具&lt;/em&gt;。&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Chrome&lt;/strong&gt;下的stackedit插件可以离线使用，很爽。也不用担心平台受限。&lt;br&gt;在线的dillinger.io算是评价好的了，可是不能离线使用。    &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windowns&lt;/strong&gt;下的MarkdownPad也用过，不过免费版的体验不是很好。    &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mac&lt;/strong&gt;下的Mou是国人贡献的，口碑很好。推荐。    &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;下的ReText不错。    &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;其实在对语法了如于心的话，直接用编辑器就可以了，脑子里满满的都是格式化好的文本啊。&lt;/strong&gt;&lt;br&gt;我现在使用&lt;code&gt;马克飞象&lt;/code&gt; + &lt;code&gt;Markdown-here&lt;/code&gt;，先编辑好，然后一键格式化，挺方便。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：不同的Markdown解释器或工具对相应语法（扩展语法）的解释效果不尽相同，具体可参见工具的使用说明。&lt;br&gt;虽然有人想出面搞一个所谓的标准化的Markdown，[没想到还惹怒了健在的创始人John Gruber]&lt;br&gt;(&lt;a href=&quot;http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/)。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/)。&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;以上基本是所有traditonal markdown的语法。&lt;/p&gt;
&lt;h3 id=&quot;其它：&quot;&gt;&lt;a href=&quot;#其它：&quot; class=&quot;headerlink&quot; title=&quot;其它：&quot;&gt;&lt;/a&gt;其它：&lt;/h3&gt;&lt;p&gt;列表的使用(非traditonal markdown)：&lt;/p&gt;
&lt;p&gt;用&lt;code&gt;|&lt;/code&gt;表示表格纵向边界，表头和表内容用&lt;code&gt;-&lt;/code&gt;隔开，并可用&lt;code&gt;:&lt;/code&gt;进行对齐设置，两边都有&lt;code&gt;:&lt;/code&gt;则表示居中，若不加&lt;code&gt;:&lt;/code&gt;则默认左对齐。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;网站名称&lt;/th&gt;
&lt;th&gt;链接&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;stackedit&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://stackedit.io/editor&quot; title=&quot;stackedit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://stackedit.io/editor&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;github&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://github.com/mmrxia&quot; title=&quot;xqs&amp;#39;s github&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/mmrxia&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;关于其它扩展语法可参见具体工具的使用说明。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;主要内容&quot;&gt;&lt;a href=&quot;#主要内容&quot; class=&quot;headerlink&quot; title=&quot;主要内容&quot;&gt;&lt;/a&gt;主要内容&lt;/h2&gt;&lt;blockquote&gt;
&lt;h4 id=&quot;Markdown是什么？&quot;&gt;&lt;a href=&quot;#Markdown是什么？&quot; class=
    
    </summary>
    
      <category term="参考资料" scheme="http://mmrxia.github.io/categories/%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/"/>
    
    
      <category term="markdown" scheme="http://mmrxia.github.io/tags/markdown/"/>
    
  </entry>
  
</feed>
